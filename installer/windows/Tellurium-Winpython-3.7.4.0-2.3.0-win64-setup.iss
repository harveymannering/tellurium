; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Tellurium"
#define MyAppPublisher "University of Washington, Seattle, WA, USA"
#define MyAppURL "http://tellurium.analogmachine.org/"
#define MyAppSetupIconFile "favicon.ico"
;#define MyAppSetupIconFile "tellurium_icon_64x64.ico"
#define ThisInstallerPostfix "win64-setup"

#define Py "Python"
#define PyV "3.7"
#define PyVer "3.7.7.amd64"
#define CurrentVer ""
#define TelluriumVersion "2.3.5"
#define Tellurium_Winpython "TW-3.7.7.1-win64-2.3.0"

#define ISSI_Splash "Tellurium_splash_installer_updated.bmp"
#define ISSI_Splash_T 3
#define ISSI_Splash_X 300
#define ISSI_Splash_Y 200
#define ISSI_IncludePath "C:\ISSI"
#include ISSI_IncludePath+"\_issi.isi"

[Setup]
AppId={{498D1E8D-A47D-4E8E-98CA-F77EBCA640F5}
AppName={#MyAppName}
AppVersion={#TelluriumVersion}-{#PyV}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DisableWelcomePage=no
DefaultDirName={sd}\Tellurium-Winpython-{#PyV}

DisableProgramGroupPage=yes
DisableReadyPage=yes
DisableDirPage=auto
OutputDir=.\dist
OutputBaseFilename={#MyAppName}-{#TelluriumVersion}-{#Py}-{#PyV}-{#ThisInstallerPostfix}{#CurrentVer}
SetupIconFile={#MyAppSetupIconFile}
;WizardImageFile=.\tellurium-spyder-bdist_wininst.bmp
WizardSmallImageFile=.\installer_small_updated.bmp
Compression=lzma2/fast
SolidCompression=no
PrivilegesRequired=admin
RestartApplications=no
CloseApplications=force

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
;Source: "./NEWS.txt"; DestDir: "{app}"; Flags: ignoreversion
;Source: "./LICENSE.txt"; DestDir: "{app}"; Flags: ignoreversion
;Source: "./VERSION.txt"; DestDir: "{app}"; Flags: ignoreversion deleteafterinstall
;Source: "./README.txt"; DestDir: "{app}"; Flags: ignoreversion
;Source: "./NOTICE.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "./settings5.1.5/*"; DestDir: "{app}/settings"; Flags: ignoreversion recursesubdirs createallsubdirs onlyifdoesntexist uninsneveruninstall
Source: "./{#Tellurium_Winpython}/*"; DestDir: "{app}"; Flags: replacesameversion recursesubdirs createallsubdirs
Source: "./tellurium-examples/*"; DestDir: "{app}/tellurium-examples"; Flags: replacesameversion recursesubdirs createallsubdirs

[Run]
;Filename: "{app}\python-{#PyVer}\Lib\site-packages\tellurium\README.txt"; Description: "View the README file"; Flags: postinstall shellexec skipifsilent unchecked
Filename: "https://github.com/sys-bio/tellurium/blob/master/README.md"; Description: "View README file online"; Flags: postinstall shellexec skipifsilent unchecked
Filename: "{app}\Spyder.exe"; Description: "Run Spyder for Tellurium"; Flags: postinstall shellexec skipifsilent
;Filename: "{app}\Spyder.exe"; Parameters: "-w ""{userdocs}"""; Description: "Run Spyder for Tellurium"; Flags: postinstall shellexec skipifsilent

[Icons]
Name: "{commondesktop}\Spyder for Tellurium {#PyV}"; Filename: "{app}\Spyder.exe"; IconFilename: "{app}\t\Tellurium_filled_small.ico"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\Spyder for Tellurium {#PyV}"; Filename: "{app}\Spyder.exe"; IconFilename: "{app}\t\Tellurium_filled_small.ico"
;Name: "{commondesktop}\Spyder for Tellurium"; Filename: "{app}\Spyder.exe"; Parameters: "-w ""{userdocs}"""; IconFilename: "{app}\python-{#PyVer}\Lib\site-packages\spyderplugins\images\Tellurium_filled_small.ico"
;Name: "{commonprograms}\Tellurium Winpython {#PyV}\Spyder for Tellurium"; Filename: "{app}\Spyder.exe"; Parameters: "-w ""{userdocs}"""; IconFilename: "{app}\python-{#PyVer}\Lib\site-packages\spyderplugins\images\Tellurium_filled_small.ico"
;Name: "{commonprograms}\Tellurium Winpython {#PyV}\Spyder-Reset Settings"; Filename: "{app}\Spyder.exe"; Parameters: "--reset"; IconFilename: "{app}\python-{#PyVer}\DLLs\py.ico"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\Reset Spyder"; Filename: "{app}\Spyder reset.exe"; IconFilename: "{app}\t\favicon.ico"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\Launch Jupyter Notebook"; Filename: "{app}\Jupyter Notebook.exe"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\Launch JupyterLab"; Filename: "{app}\Jupyter Lab.exe"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\Winpython Interpreter"; Filename: "{app}\WinPython Interpreter.exe"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\Winpython Command Prompt"; Filename: "{app}\Winpython Command Prompt.exe"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\WinPython Powershell Prompt"; Filename: "{app}\WinPython Powershell Prompt.exe"
;Name: "{commonprograms}\Tellurium Winpython {#PyV}\Winpython Control Panel"; Filename: "{app}\WinPython Control Panel.exe"
Name: "{commonprograms}\Tellurium Winpython {#PyV}\Uninstall Tellurium {#PyV}"; Filename: "{uninstallexe}"
;Name: "{commonprograms}\Tellurium Winpython {#PyV}\Launch iPython Notebook"; Filename: "{app}\python-{#PyVer}\Scripts\ipython.exe"; Parameters: "notebook"; IconFilename: "{app}\python-{#PyVer}\DLLs\py.ico"; WorkingDir: "{app}\python-{#PyVer}\Scripts"

[InstallDelete]
;Type: files; Name: "{app}\IPython Notebook.exe"
;Type: files; Name: "{app}\IPython Qt Console.exe"
;Type: files; Name: "{app}\Spyder.exe"
;Type: files; Name: "{app}\WinPython Command Prompt.exe"
;Type: files; Name: "{app}\WinPython Control Panel.exe"
;Type: files; Name: "{app}\WinPython Interpreter.exe"
;Type: files; Name: "{app}\IDLE (Python GUI).exe"
;Type: files; Name: "{app}\Qt Assistant.exe"
;Type: files; Name: "{app}\Qt Demo.exe"
;Type: files; Name: "{app}\Qt Designer.exe"
;Type: files; Name: "{app}\Qt Linguist.exe"
;Type: files; Name: "{app}\Spyder (light).exe"
;Type: filesandordirs; Name: "{app}\python-{#PyVer}"
;Type: filesandordirs; Name: "{app}\scripts"
;Type: filesandordirs; Name: "{app}\notebooks"
;Type: filesandordirs; Name: "{app}\t"
Type: filesandordirs; Name: "{userdesktop}\Spyder for Tellurium.lnk"
Type: filesandordirs; Name: "{userprograms}\Tellurium Winpython"
;Type: filesandordirs; Name: "{app}\settings\*.*"

[UninstallDelete]
;Type: files; Name: "{app}\IPython Notebook.exe"
;Type: files; Name: "{app}\IPython Qt Console.exe"
;Type: files; Name: "{app}\Spyder.exe"
;Type: files; Name: "{app}\WinPython Command Prompt.exe"
;Type: files; Name: "{app}\WinPython Control Panel.exe"
;Type: files; Name: "{app}\WinPython Interpreter.exe"
;Type: files; Name: "{app}\IDLE (Python GUI).exe"
;Type: files; Name: "{app}\Qt Assistant.exe"
;Type: files; Name: "{app}\Qt Demo.exe"
;Type: files; Name: "{app}\Qt Designer.exe"
;Type: files; Name: "{app}\Qt Linguist.exe"
;Type: files; Name: "{app}\Spyder (light).exe"
Type: filesandordirs; Name: "{app}\python-{#PyVer}"
;Type: filesandordirs; Name: "{app}\scripts\*.*"
;Type: filesandordirs; Name: "{app}\settings\*.*"
;Type: filesandordirs; Name: "{app}\t"

[CustomMessages]
SelectDirBrowseLabel2=DO NOT install under Program Files.%nIt is recommended to use the default installation directory.

[Code]
// Check if older version is installed
function GetUninstallString(): String;
var
  sUnInstPath: String;
  sUnInstallString: String;
  sTelluriumVersion: String;
  //sCurrentVersion1: String;
  sCurrentVersion2: String;
begin
  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppId")}_is1');
  sUnInstallString := '';
  sTelluriumVersion := '';
  //sCurrentVersion1 := '{#TelluriumVersion}';
  sCurrentVersion2 := '{#TelluriumVersion}-{#PyV}';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  if not RegQueryStringValue(HKLM, sUnInstPath, 'DisplayVersion', sTelluriumVersion) then
    RegQueryStringValue(HKCU, sUnInstPath, 'DisplayVersion', sTelluriumVersion);
  //if (sTelluriumVersion = sCurrentVersion1) then
  //  sUnInstallString := '';
  if (sTelluriumVersion = sCurrentVersion2) then
    sUnInstallString := '';
  Result := sUnInstallString;
end;

/////////////////////////////////////////////////////////////////////
function IsUpgrade(): Boolean;
begin
  Result := (GetUninstallString() <> '');
end;

/////////////////////////////////////////////////////////////////////
function UninstallOldVersion(): Integer;
var
  sUnInstallString: String;
  iResultCode: Integer;

begin
// Return Values:
// 1 - uninstall string is empty
// 2 - error executing the UnInstallString
// 3 - successfully executed the UnInstallString

  // default return value
  Result := 0;

  // get the uninstall string of the old app
  sUnInstallString := GetUninstallString();
  if sUnInstallString <> '' then begin
    sUnInstallString := RemoveQuotes(sUnInstallString);
    if Exec(sUnInstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES','', SW_HIDE, ewWaitUntilTerminated, iResultCode) then
      Result := 3
    else
      Result := 2;
  end else
    Result := 1;
end;

/////////////////////////////////////////////////////////////////////
// Forbid installing under program files directory.
var
  //forbidden: String;
  SelectDirBrowseLabel2: TNewStaticText;

procedure InitializeWizard(); 
begin
  // you can set e.g. the fixed height to the original WelcomeLabel2, or
  // you can set the WelcomeLabel2 to auto-size to the text content it's
  // showing; to set the fixed height, use the following line:
  // WizardForm.WelcomeLabel2.Height := 97;
  //WizardForm.SelectDirBrowseLabel.AutoSize := True;

  // now you got some space on the welcome page, so let's fill it up with
  // your own label called WelcomeLabel3
  SelectDirBrowseLabel2 := TNewStaticText.Create(WizardForm);
  SelectDirBrowseLabel2.Parent := WizardForm.SelectDirPage;
  SelectDirBrowseLabel2.AutoSize := False;
  SelectDirBrowseLabel2.Left := WizardForm.SelectDirBrowseLabel.Left;
  SelectDirBrowseLabel2.Top := WizardForm.DirEdit.Top + WizardForm.DirEdit.Height + ScaleY(16);
  SelectDirBrowseLabel2.Width := WizardForm.SelectDirBrowseLabel.Width;
  SelectDirBrowseLabel2.Height := 60
  SelectDirBrowseLabel2.Font.Assign(WizardForm.SelectDirBrowseLabel.Font); 
  SelectDirBrowseLabel2.Caption := CustomMessage('SelectDirBrowseLabel2');

  SelectDirBrowseLabel2.Font.Color := clRed;
  //WizardForm.DirEdit.OnChange := @OnDirEditChange;
end;

/////////////////////////////////////////////////////////////////////
procedure CurStepChanged(CurStep: TSetupStep);
begin
  if (CurStep=ssInstall) then
  begin
    if (IsUpgrade()) then begin
      //if not DirExists(ExpandConstant('{app}\python-{#PyVer}\')) then begin
      MsgBox('Old version of Tellurium detected. The installer will uninstall the previous version.',
          mbInformation, MB_OK)
      UninstallOldVersion();
    end;
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  if CurUninstallStep = usUninstall then
  begin    
    if DirExists(ExpandConstant('{app}\settings')) then
      if MsgBox('Do you want to delete the settings?',
        mbConfirmation, MB_YESNO) = IDYES
      then
        DelTree(ExpandConstant('{app}\settings'), True, True, True);
  end;
end;
